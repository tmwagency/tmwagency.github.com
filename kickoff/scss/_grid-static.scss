//  =============================
//  === THE CHOROGRAPHIC GRID ===
//  =============================
//  GRID CALCULATIONS
//  GRID SETUP
//  CENTRED COLUMNS
//  BLOCK GRIDS

// Basic Usage
// <div class="row">
// 	<div class="col span12"></div>
// </div>


//  =========================
//  === GRID CALCULATIONS ===
//  =========================
@mixin columns($columnSpan: 1) {
	width: ($gridColumnWidth * $columnSpan) + ($gridGutterWidth * ($columnSpan - 1));
}
@mixin shunt($shuntSpan: 1) {
	margin-right: ($gridColumnWidth * $shuntSpan) + ($gridGutterWidth * ($shuntSpan - 1));
}
@mixin offset($columnOffset: 1) {
	margin-left: ($gridColumnWidth * $columnOffset) + ($gridGutterWidth * $columnOffset) + $gridGutterWidth;
}
@mixin offsetFirstChild($columnOffset: 1) {
	margin-left: ($gridColumnWidth * $columnOffset) + ($gridGutterWidth * $columnOffset);
}
@mixin push($pushOffset: 1) {
	left: ($gridColumnWidth * $pushOffset) + ($gridGutterWidth * $pushOffset);
}
@mixin pull($pullOffset: 1) {
	right: ($gridColumnWidth * $pullOffset) + ($gridGutterWidth * $pullOffset);
}
@mixin gridColumn() {
	margin-left: $gridGutterWidth;
	float: left;
	min-height: 1px;
	position: relative;
	clear: none;
	&:first-child { margin-left: 0; }
}

//  ==================
//  === GRID SETUP ===
//  ==================
$gridColumnWidth: 4.3%;
$gridGutterWidth: 4.4%;
$gridMaxWidth: 1200px;
$gridMargin: 32px; /*=== Space outside the grid  ===*/

.container {
	padding-left: $gridMargin;
	padding-right: $gridMargin;
	width: 960px;
	max-width: 1500px;
	margin: 0 auto;
}

.row {
	width: 100%;
	margin: 0 auto;
	@include clearfix;
}

/* To fix the grid into a certain size, set max-width to width */
.row .row {
	min-width: 0;
}

.col {
	@include gridColumn;
}

// HACK/FIX FOR WEBKIT'S INADEQUATE SUBPIXEL PERCENTAGE CALCULATIONS
// In order to work around browsers' different rounding behaviours, Foundation will float the last column in a row to the right so the edge aligns. If your row doesn't have a count that adds up to 12 columns you can tag the last column with class="end" in order to override that behaviour.
[class*="col"] + [class*="col"]:last-child, .mq-alpha-end { float: right; }
[class*="col"] + [class*="col"].end { float: left; }

.span1  { @include columns(1);  }
.span2  { @include columns(2);  }
.span3  { @include columns(3);  }
.span4  { @include columns(4);  }
.span5  { @include columns(5);  }
.span6  { @include columns(6);  }
.span7  { @include columns(7);  }
.span8  { @include columns(8);  }
.span9  { @include columns(9);  }
.span10 { @include columns(10); }
.span11 { @include columns(11); }
.span12 { @include columns(12); }

//  ==============================================
//  === OFFSET & SOURCE ORDERING (PUSH & PULL) ===
//  ==============================================
.row {
	> .offset1 {
		@include offset(1);
		&:first-child {
			@include offsetFirstChild(1);
		}
	}
	> .offset2 {
		@include offset(2);
		&:first-child {
			@include offsetFirstChild(2);
		}
	}
	> .offset3 {
		@include offset(3);
		&:first-child {
			@include offsetFirstChild(3);
		}
	}
	> .offset4 {
		@include offset(4);
		&:first-child {
			@include offsetFirstChild(4);
		}
	}
	> .offset5 {
		@include offset(5);
		&:first-child {
			@include offsetFirstChild(5);
		}
	}
	> .offset6 {
		@include offset(6);
		&:first-child {
			@include offsetFirstChild(6);
		}
	}
	> .offset7 {
		@include offset(7);
		&:first-child {
			@include offsetFirstChild(7);
		}
	}
	> .offset8 {
		@include offset(8);
		&:first-child {
			@include offsetFirstChild(8);
		}
	}
	> .offset9 {
		@include offset(9);
		&:first-child {
			@include offsetFirstChild(9);
		}
	}
	> .offset10 {
		@include offset(10);
		&:first-child {
			@include offsetFirstChild(10);
		}
	}
	> .offset11 {
		@include offset(11);
		&:first-child {
			@include offsetFirstChild(11);
		}
	}
	> .offset12 {
		@include offset(12);
		&:first-child {
			@include offsetFirstChild(12);
		}
	}

	> .push2    { @include push(2); }
	> .push3 	{ @include push(3); }
	> .push4 	{ @include push(4); }
	> .push5 	{ @include push(5); }
	> .push6 	{ @include push(6); }
	> .push7 	{ @include push(7); }
	> .push8 	{ @include push(8); }
	> .push9 	{ @include push(9); }
	> .push10 	{ @include push(10); }

	> .pull2 	{ @include pull(2); }
	> .pull3 	{ @include pull(3); }
	> .pull4 	{ @include pull(4); }
	> .pull5 	{ @include pull(5); }
	> .pull6 	{ @include pull(6); }
	> .pull7 	{ @include pull(7); }
	> .pull8 	{ @include pull(8); }
	> .pull9 	{ @include pull(9); }
	> .pull10 	{ @include pull(10); }
}


//  =======================
//  === CENTRED COLUMNS ===
//  =======================
.centered.col, .centred.col { float: none; margin: 0 auto; }